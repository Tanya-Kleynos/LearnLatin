@model LearnLatin.Models.Test

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Test</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Created)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Created)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Modified)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Modified)
        </dd>
    </dl>
</div>
<div>
    <h4>Tasks</h4>
    <hr />
    @foreach (var item in Model.Tasks)
    {
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => item.Description)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => item.Description)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => item.Created)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => item.Created)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => item.Modified)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => item.Modified)
            </dd>
            <dt class="col-sm-2">
                <a asp-controller="TrueOutOfFalseAnswers" asp-action="Create" asp-route-taskId="@item.Id">Создать ответ с выбором правильного</a>
            </dt>
            <dd class="col-sm-10">
                <a asp-controller="TrueOutOfFalseAnswers" asp-action="Index" asp-route-taskId="@item.Id">Ответы</a>
            </dd>
        </dl>
    }
    @foreach (var item in Model.InputTasks)
    {
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => item.Description)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => item.Description)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => item.Created)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => item.Created)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => item.Modified)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => item.Modified)
            </dd>
            <dt class="col-sm-2">
                <a asp-controller="InputAnswers" asp-action="Create" asp-route-taskId="@item.Id">Создать ответ</a>
            </dt>
            <dd class="col-sm-10">
                <a asp-controller="InputAnswers" asp-action="Index" asp-route-taskId="@item.Id">Ответы</a>
            </dd>
        </dl>
    }
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-controller="TrueOutOfFalseTasks" asp-action="Create" asp-route-testId="@Model.Id">Создать задание с выбором правильного ответа</a> |
    <a asp-controller="InputTasks" asp-action="Create" asp-route-testId="@Model.Id">Создать задание с вводом ответа</a> |
    <a asp-action="Index">Back to List</a>
</div>
